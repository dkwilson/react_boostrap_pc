{"version":3,"sources":["assets/sky.jpg","Home.js","About.js","Contact.js","NoMatch.js","components/Layout.js","components/NavigationBar.js","components/Jumbotron.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","About","Contact","NoMatch","Layout","props","Container","children","Styles","styled","div","NavigationBar","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Item","Link","skyImage","Jumbotron","fluid","FooterContainer","footer","Footer","Date","getFullYear","App","Fragment","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,iC,4LCE9BC,EAAO,kBAChB,6BACI,2CACA,ijBACA,ikBCJKC,EAAQ,kBACjB,6BACI,0CACA,wLACA,0HACA,gLCLKC,EAAU,kBACnB,6BACI,0CACA,0LCHKC,EAAU,kBACnB,6BACI,0C,QCDKC,EAAS,SAACC,GAAD,OAClB,kBAACC,EAAA,EAAD,KACKD,EAAME,W,oSCDf,IAAMC,EAASC,IAAOC,IAAV,KAcCC,EAAgB,kBACzB,kBAACH,EAAD,KACI,kBAACI,EAAA,EAAD,CAAQC,OAAO,MACX,kBAACD,EAAA,EAAOE,MAAR,CAAcC,KAAK,KAAnB,iBACA,kBAACH,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7B,kBAACL,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACX,kBAACD,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,KAAf,SAEJ,kBAACK,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,UAAf,UAEJ,kBAACK,EAAA,EAAIE,KAAL,KACI,kBAACF,EAAA,EAAIG,KAAL,CAAUR,KAAK,YAAf,iB,meC3BxB,IAAMP,EAASC,IAAOC,IAAV,IAEcc,KAmBbC,EAAY,kBACrB,kBAAC,EAAD,KACI,kBAAC,IAAD,CAAOC,OAAK,EAACL,UAAU,SACnB,yBAAKA,UAAU,YACf,kBAACf,EAAA,EAAD,KACI,6CACA,kG,oXC7BhB,IAAMqB,EAAkBlB,IAAOmB,OAAV,KAuCNC,MApBf,WACE,OACI,kBAACF,EAAD,KACI,yBAAKN,UAAU,eACf,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,iBACX,uBAAGA,UAAU,kBAAb,QACW,IAAIS,MAAOC,cADtB,sDCIPC,E,uKApBX,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWpC,IACjC,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,SAASC,UAAWnC,IACtC,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,WAAWC,UAAWlC,IACxC,kBAAC,IAAD,CAAOkC,UAAWjC,OAIxB,kBAAC,EAAD,W,GAhBUkC,aCCEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8f52d931.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sky.de718bf8.jpg\";","import React from 'react'\n\nexport const Home = () => (\n    <div>\n        <h2>Lorem Ipsum</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus quis felis fringilla, finibus turpis sed, pellentesque sapien. Curabitur id felis dolor. Mauris nec mauris sit amet purus pellentesque iaculis in a mauris. Morbi quis scelerisque massa, sed consequat neque. Curabitur ultrices turpis et maximus fringilla. Duis cursus sapien eu fringilla laoreet. Sed malesuada efficitur tellus sed rutrum. Quisque non pretium leo. Fusce congue laoreet pharetra. Maecenas placerat quam vel nunc eleifend, eu fringilla metus pulvinar.</p>\n        <p>Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Suspendisse malesuada eleifend nisl sit amet cursus. Morbi velit lorem, scelerisque ac augue nec, faucibus faucibus sem. Donec non porttitor libero. Vivamus tortor arcu, egestas quis finibus eget, accumsan in nibh. Integer egestas nulla sit amet sagittis vehicula. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Nullam aliquam non est vel consequat. Donec auctor tellus nunc, et interdum est interdum non.</p>       \n    </div>\n    \n)\n","import React from 'react'\n\nexport const About = () => (\n    <div>\n        <h2>About Page</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus quis felis fringilla, finibus turpis sed, pellentesque sapien. Curabitur id felis dolor.</p>\n        <p>Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos.</p>\n        <p>Nullam tincidunt efficitur sollicitudin. Ut malesuada, lorem ut finibus gravida, velit nisi hendrerit elit, a vestibulum leo augue vitae nibh. </p>       \n    </div>\n    \n)","import React from 'react'\n\nexport const Contact = () => (\n    <div>\n        <h2>Contact Us</h2>\n        <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus quis felis fringilla, finibus turpis sed, pellentesque sapien. Curabitur id felis dolor.</p>      \n    </div>\n    \n)","import React from 'react'\n\nexport const NoMatch = () => (\n    <div>\n        <h2>No Match</h2>    \n    </div>\n    \n)","import React from 'react';\nimport { Container } from 'react-bootstrap';\n\nexport const Layout = (props) => (\n    <Container>\n        {props.children}\n    </Container>\n)","import React from 'react';\nimport { Nav, Navbar } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nconst Styles = styled.div`\n    .navbar {\n        background-color: #222;\n    }\n\n    .navbar-brand, .navbar-nav .nav-link {\n        color: #bbb;\n\n        &:hover {\n            color: white;\n        }\n    }\n`;\n\nexport const NavigationBar = () => (\n    <Styles>\n        <Navbar expand='lg'>\n            <Navbar.Brand href=\"/\">New York Life</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"ml-auto\">\n                    <Nav.Item>\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/about\">About</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                        <Nav.Link href=\"/contact\">Contact</Nav.Link>\n                    </Nav.Item>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    </Styles>\n)","import React from 'react';\nimport { Jumbotron as Jumbo, Container } from 'react-bootstrap';\nimport styled from 'styled-components';\nimport skyImage from '../assets/sky.jpg';\n\nconst Styles = styled.div`\n    .jumbo {\n        background: url(${skyImage}) no-repeat fixed bottom;\n        background-size: cover;\n        color: #ccc;\n        position: relative;\n        z-index: -2;\n    }\n\n    .overlay {\n        background-color: #000;\n        opacity: 0.6;\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        right: 0;\n        z-index: -1;\n    }\n`;\n\nexport const Jumbotron = () => (\n    <Styles>\n        <Jumbo fluid className=\"jumbo\">\n            <div className=\"overlay\"></div>\n            <Container>\n                <h1>Welcome Home!</h1>\n                <p>Make your mark in New York and you are a made man. - Mark Twain</p>\n            </Container>\n        </Jumbo>\n    </Styles>\n)","import React from \"react\";\nimport styled from 'styled-components';\n\nconst FooterContainer = styled.footer`\n    .main-footer {\n        position: fixed;\n        left: 0;\n        bottom: 0;\n        background: #222;\n        width: 100%;\n        color: white;\n       \n    }\n\n    .footer-bottom{\n        width: 100%;\n        padding: 25px 0;\n        text-align: center;\n        color: #ccc;\n    }\n`;\n\nfunction Footer() {\n  return (\n      <FooterContainer>\n          <div className='main-footer'>\n          <div className='container'>\n              <div className=\"row\">\n                  <div className='footer-bottom'>\n                      <p className=\"text-xs-center\">\n                          &copy;{new Date().getFullYear()} Practice Project Inc. - All Rights Reserved\n                      </p>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n      </FooterContainer>\n      \n  )\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./Home\";\nimport { About } from \"./About\";\nimport { Contact } from \"./Contact\";\nimport { NoMatch } from \"./NoMatch\";\nimport { Layout } from \"./components/Layout\";\nimport { NavigationBar } from './components/NavigationBar';\nimport { Jumbotron } from './components/Jumbotron';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <NavigationBar />\n        <Jumbotron />\n        <Layout>\n          <Router>\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact\" component={Contact} />\n              <Route component={NoMatch} />\n            </Switch>\n          </Router>\n        </Layout>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}